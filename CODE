import json

class Book:
    def __init__(self, title, author, year, isbn, available=True):
        self.title = title
        self.author = author
        self.year = year
        self.isbn = isbn
        self.available = available
    
    def __str__(self):
        status = "Available" if self.available else "Borrowed"
        return f"{self.title} by {self.author} ({self.year}) - ISBN: {self.isbn} [{status}]"

class Library:
    def __init__(self):
        self.books = []
        self.load_books()
    
    def add_book(self, title, author, year, isbn):
        if any(book.isbn == isbn for book in self.books):
            return "Book with this ISBN already exists!"
        self.books.append(Book(title, author, year, isbn))
        return "Book added successfully!"
    
    def show_books(self):
        if not self.books:
            print("No books in library.")
        for i, book in enumerate(self.books, 1):
            print(f"{i}. {book}")
    
    def search(self, term):
        term = term.lower()
        results = [b for b in self.books 
                  if term in b.title.lower() or term in b.author.lower()]
        if not results:
            print("No matches found.")
        for book in results:
            print(book)
    
    def borrow(self, isbn):
        for book in self.books:
            if book.isbn == isbn:
                if book.available:
                    book.available = False
                    return f"Borrowed: {book.title}"
                return "Book already borrowed"
        return "Book not found"
    
    def return_book(self, isbn):
        for book in self.books:
            if book.isbn == isbn:
                if not book.available:
                    book.available = True
                    return f"Returned: {book.title}"
                return "Book wasn't borrowed"
        return "Book not found"
    
    def save_books(self):
        with open("library.txt", "w") as f:
            books_data = [{"title": b.title, "author": b.author, 
                          "year": b.year, "isbn": b.isbn, 
                          "available": b.available} for b in self.books]
            json.dump(books_data, f)
    
    def load_books(self):
        try:
            with open("library.txt", "r") as f:
                data = json.load(f)
                self.books = [Book(**b) for b in data]
        except FileNotFoundError:
            pass

def main():
    lib = Library()
    while True:
        print("\n1. Add Book\n2. Show Books\n3. Search\n4. Borrow\n5. Return\n6. Exit")
        choice = input("Choose option: ")
        
        if choice == "1":
            title = input("Title: ")
            author = input("Author: ")
            year = input("Year: ")
            isbn = input("ISBN: ")
            print(lib.add_book(title, author, year, isbn))
        
        elif choice == "2":
            lib.show_books()
        
        elif choice == "3":
            term = input("Search term: ")
            lib.search(term)
        
        elif choice == "4":
            isbn = input("ISBN to borrow: ")
            print(lib.borrow(isbn))
        
        elif choice == "5":
            isbn = input("ISBN to return: ")
            print(lib.return_book(isbn))
        
        elif choice == "6":
            lib.save_books()
            print("Goodbye!")
            break
        
        else:
            print("Invalid choice")

if __name__ == "__main__":
    main()
